import telebot
from telebot import types
from telebot.types import Message
from colorama import Fore, Style
import requests
from .send_to_b24 import createRequest, edit_deal,delete_deal,switch
from django.core.files import File
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
import base64
import os



# import os
# import django
# from django.conf import settings
# from django.db import models

# # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è, —É–∫–∞–∑—ã–≤–∞—é—â–µ–π –Ω–∞ settings.py –ø—Ä–æ–µ–∫—Ç–∞ Django
# os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'your_other_project.settings')
# django.setup()

# # –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –Ω—É–∂–Ω–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å
# from your_other_app.models import YourModel

# # –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥–µ–ª—å—é
# def process_data():
#     # –ü—Ä–∏–º–µ—Ä –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
#     queryset = YourModel.objects.all()
#     for obj in queryset:
#         print(obj)

# if __name__ == '__main__':
#     process_data()






group_id = -1002003805171
token = "7156367176:AAHWf4T-36vtV8UjHjDDowYlRY--Myq1OFM"
bot = telebot.TeleBot(token)

def start(message):
    if message.chat.id == message.from_user.id:
        text="""
–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.
C —á–µ–º —Å–≤—è–∑–∞–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞.

–•–æ–∑ –∏–ª–∏ —Ç–µ—Ö —á–∞—Å—Ç—å?

–ö–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ üëá
            """
        markup = types.ReplyKeyboardMarkup()
        markup.add("IT –Ω–∞—Ä—è–¥ üíª", "–•–æ–∑ –Ω–∞—Ä—è–¥ üõ†üßπ")

        bot.send_message(message.chat.id, text, reply_markup=markup)

        bot.register_next_step_handler(message, get_request_type)
def get_request_type(message):
    if message.text == "IT –Ω–∞—Ä—è–¥ üíª":
        data = Request(type="it")
    elif message.text == "–•–æ–∑ –Ω–∞—Ä—è–¥ üõ†üßπ":
        data = Request(type="hoz")
    else:
        start(message)
        return

    if data.type == 'it':
        text = "–í—ã–±–µ—Ä–∏—Ç–µ –∑–æ–Ω—É. –ù–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞"

        markup = types.ReplyKeyboardMarkup()
        [markup.add(str(i)) for i in Place.objects.all()]


        bot.send_message(message.chat.id, text, reply_markup=markup)
        bot.register_next_step_handler(message, get_zone, data)
    else:
        text = "–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ/a—É–¥–∏–æ –ø—Ä–æ–±–ª–µ–º—ã (–º–æ–∂–Ω–æ –∫—Ä—É–∂–æ—á–µ–∫ –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ)\n/skip —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
        bot.send_message(message.chat.id, text, reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, get_document, data)


def get_zone(message, data):
    if data.type == "it":
        if message.text == "/start":
            start(message)
            return
        else:
            data.zone = message.text
            data.description = f'{message.text}'
    else:
        pass


    text = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–±–ª–µ–º—ã. –ù–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞"

    markup = types.ReplyKeyboardMarkup()
    [markup.add(str(i)) for i in Problem.objects.all()]


    bot.send_message(message.chat.id, text, reply_markup=markup)
    bot.register_next_step_handler(message, get_problem, data)

def get_problem(message, data):
    if data.type == "it":
        if message.text == "/start":
            start(message)
            return
        else:
            problem = Problem.objects.get(name=message.text)
            data.problem = problem
            data.description += f'\n{message.text}'

    else:
        pass

    text = "–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ/a—É–¥–∏–æ –ø—Ä–æ–±–ª–µ–º—ã (–º–æ–∂–Ω–æ –∫—Ä—É–∂–æ—á–µ–∫ –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ)\n/skip —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
    bot.send_message(message.chat.id, text, reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(message, get_document, data)



def get_document(message, data):
    if message.document:
        doc = message.document
    elif message.audio:
        doc = message.audio
        data.file_type = "audio"
    elif message.voice:
        doc = message.voice
        data.file_type = "voice"
    elif message.photo:
        doc = message.photo
        data.file_type = "photo"
    elif message.video_note:
        doc = message.video_note
        data.file_type = "videonote"
    elif message.video:
        doc = message.video
        data.file_type = "video"
    elif message.text == "/start":
        start(message)
        return
    else:
        if message.text == "/skip":
            text = "–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É —Ç–µ–∫—Å—Ç–æ–º (/start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞)"
            bot.send_message(message.chat.id, text)
            bot.register_next_step_handler(message, get_desc, data)
            return

        text = "–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ/a—É–¥–∏–æ –ø—Ä–æ–±–ª–µ–º—ã (–º–æ–∂–Ω–æ –∫—Ä—É–∂–æ—á–µ–∫ –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ)\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞\n/skip —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
        bot.send_message(message.chat.id, text)
        bot.register_next_step_handler(message, get_document, data)
        return
    
    try:
        file_id = doc[-1].file_id
    except:
        file_id = doc.file_id
    
    file_id_info = bot.get_file(file_id)
    downloaded_file = bot.download_file(file_id_info.file_path)
    file_name = file_id_info.file_path.split('/')[-1]
    
    data.file = [downloaded_file, file_name]
    data.file_id = file_id
    
    text = "–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É —Ç–µ–∫—Å—Ç–æ–º (/start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞)"

    bot.send_message(message.chat.id, text)
    bot.register_next_step_handler(message, get_desc, data)

def get_desc(message, data):
    if message.text == "/start":
        start(message)
        return
    elif message.text == "/skip":
        if not data.file:
            text = "–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É —Ç–µ–∫—Å—Ç–æ–º (/start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞)\n *–ó–æ–Ω–∞*\n*–ü—Ä–æ–±–ª–µ–º–∞*"
            bot.send_message(message.chat.id, text)
            bot.register_next_step_handler(message, get_desc, data)
            return
        data.description = ""
    else:
        data.description += f'\n{message.text}'
        text = "–≠—Ç–æ —Å—Ä–æ—á–Ω–∞—è –∑–∞–¥–∞—á–∞?"
        markup = types.ReplyKeyboardMarkup()
        markup.add("–°—Ä–æ—á–Ω–æ", "–ù–µ —Å—Ä–æ—á–Ω–æ")
        bot.send_message(message.chat.id, text, reply_markup=markup)
        bot.register_next_step_handler(message, get_important, data)

def get_important(message, data):
    if message.text == "/start":
        start(message)
        return
    elif message.text == "–°—Ä–æ—á–Ω–æ":
        data.description += f'\n!!!!!–°–†–û–ß–ù–û!!!!!'

    username = ""
    if message.from_user.username:
        username += '@' + message.from_user.username
    if message.from_user.first_name:
        username += f"\n{message.from_user.first_name}"
    if message.from_user.last_name:
        username += f" {message.from_user.last_name}"

    data.username = '@' + message.from_user.username
    
    keyboard = InlineKeyboardMarkup()
    listt = Important.objects.all()
    for list in listt:
        keyboard.add(InlineKeyboardButton(text=f"{list}", callback_data=f"{data.type}:{list}"))
    # keyboard.add(InlineKeyboardButton(text="–°–º–µ–Ω–∏—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", callback_data=f"{data.type}:–°–º–µ–Ω–∏—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"))
    keyboard.add(InlineKeyboardButton(text="–õ–æ–∂–Ω–∞—è –∑–∞—è–≤–∫–∞", callback_data=f"{data.type}:–õ–æ–∂–Ω–∞—è –∑–∞—è–≤–∫–∞"))

        
    
    deal_id = createRequest(data)
    url = f"https://next.bitrix24.kz/crm/deal/details/{deal_id}/"
    if data.type == "it":
        thread = 242
        text = f"""{username}

üî¥{data.get_type_display()}
{data.description}

–ó–∞—è–≤–∫–∞ ‚Ññ{deal_id}
–°—ã–ª–∫–∞ –Ω–∞ —Å–¥–µ–ª–∫—É: {url}
"""
    else:
        thread = 244
        text = f"""{username}

üî¥{data.get_type_display()}
{data.description}

–ó–∞—è–≤–∫–∞ ‚Ññ{deal_id}
–°—ã–ª–∫–∞ –Ω–∞ —Å–¥–µ–ª–∫—É: {url}
"""

        
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏]
    if data.file_type == "video":
        mes_id = bot.send_video(group_id, message_thread_id=thread, video=data.file_id, caption=text, reply_markup=keyboard)
    elif data.file_type == "videonote":
        video_note_path = f'video_note_{deal_id}.mp4'  # –ü—É—Ç—å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤–∏–¥–µ–æ
        file_info = bot.get_file(data.file_id)  # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
        file_path = file_info.file_path  # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
        file_url = f'https://api.telegram.org/file/bot{API}/{file_path}'  # –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        response = requests.get(file_url)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
        with open(video_note_path, 'wb') as f:
            f.write(response.content)  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ
        mes_id = bot.send_video(group_id, caption=text,message_thread_id=thread, video=open(video_note_path, 'rb'), reply_markup=keyboard)
        # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –¥–∏—Å–∫–∞
        os.remove(video_note_path)
    elif data.file_type == "photo":
        mes_id = bot.send_photo(group_id, photo=data.file_id,message_thread_id=thread, caption=text, reply_markup=keyboard)
    elif data.file_type == "audio":
        mes_id = bot.send_audio(group_id, audio=data.file_id, caption=text,message_thread_id=thread, reply_markup=keyboard)
    elif data.file_type == "voice":
        mes_id = bot.send_voice(group_id, voice=data.file_id, caption=text,message_thread_id=thread, reply_markup=keyboard)
    else:
        mes_id = bot.send_message(group_id, text,message_thread_id=thread, reply_markup=keyboard)

    data.message_id = mes_id.message_id
    # send(userid=message.from_user.id, username=username, deal_to=data.type, important='–ù–æ–≤–∞—è', file_type=data.file_type, message=data.description, message_id=data.message_id, deal_id=deal_id)
    entry = Case.objects.create(userid = message.from_user.id, username = username, type = data.type, important = "–ù–æ–≤–∞—è", message = data.description, message_id1 = data.message_id, deal_id = deal_id)
    entry.save()
    print("\n\n\n\n\n\n\n\n\n\n–°–¥–µ–ª–∞–ª\n\n\n\n\n\n\n\n\n\n")
    
    #Send a mes into the group
    bot.send_message(message.chat.id, f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ ‚Ññ{deal_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ—â—ë –æ–¥–Ω—É –∑–∞—è–≤–∫—É", reply_markup=types.ReplyKeyboardRemove())